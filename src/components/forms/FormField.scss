:host {

    /**
     * @prop --form-field-invalid-color: Color of the border and label, when field control is in invalid state.
     */


    --form-field--invalid-color: var(--form-field-invalid-color, var(--ion-color-danger));
    display: block;

    > fieldset {
        border-width: var(--ionx-border-width, 1px);
        border-color: var(--ion-border-color);
        border-radius: var(--ionx-border-radius);
        border-style: solid;
        position: relative;
        margin: 0;
        padding: 0;

        > legend {
            line-height: 16px;
            font-size: 14px;
            margin: 0 12px;
            padding: 0 4px;
            display: flex;
            justify-items: center;
            align-content: center;

            [slot-container=label-button] {
                display: none;

                &:not(:empty) {
                    display: inline-flex;
                    height: 16px;
                    background: var(--ion-item-background, var(--ion-background-color, #fff));
                    border-radius: var(--ionx-border-radius, 4px);
                }
            }
        }

        > [slot-container=description] {
            margin: 4px 16px 0 16px;
            font-size: small;

            &:empty {
                display: none;
            }
        }

        > [ionx--content] {
            display: flex;

            > [slot-container=default] {
                flex: 1;
            }

            > [slot-container=end] {
                align-self: center;
                &:empty {
                    display: none;
                }
            }
        }
    }

    > [slot-container=error], > [slot-container=hint] {
        margin: 8px 16px 0px 16px;
        font-size: small;
    }

    > [slot-container=error] {
        color: var(--form-field--invalid-color);
    }

    > [slot-container=hint] {
        color: rgba(var(--ion-text-color-rgb), .5);
    }

    &.ion-invalid > {
        fieldset {
            border-color: var(--form-field-invalid-border-color, var(--form-field--invalid-color));
        }

        fieldset > legend [slot-container="label"] {
            color: var(--form-field-invalid-label-color, var(--form-field--invalid-color));
        }
    }
}

::slotted(ion-button[slot=label-button]) {
    height: 16px;
    font-size: 12px;
    font-weight: 500;
    margin: 0 0 0 4px;
    letter-spacing: initial;
    --padding-start: 4px;
    --padding-end: 4px;

    &.button-has-icon-only {
        --padding-start: 0;
        --padding-end: 0;
        font-size: 10px;
    }

    &:first-child {
        margin-left: 8px;
    }
}

::slotted(ion-input), ::slotted(ion-textarea) {
    --padding-start: 16px;
    --padding-end: 16px;
}

::slotted(ion-list) {
    background: transparent;
    margin: 10px 0 16px 0;
    padding: 0;

    &.list-lines-full :first-child {
        --border-width: var(--ionx-border-width) 0 var(--ionx-border-width) 0;
    }

    &:not(.list-lines-full) :first-child {
        --inner-border-width: var(--ionx-border-width) 0 var(--ionx-border-width) 0;
    }
}
